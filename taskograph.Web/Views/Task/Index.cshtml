@model TaskViewModel
@using Task = taskograph.Models.Tables.Task;


<h1>Tasks</h1>

<table class="table">
    <thead>
        <tr>
            <th scope="col">Group</th>
            <th scope="col">Task</th>
            <th scope="col">Start</th>
            <th scope="col">Add time</th>
            <th scope="col">Total today</th>
        </tr>
    </thead>


    <tbody>
        @{
            foreach (Task task in Model.Tasks)
            {
                    <tr>
                        <td>@task.Group.Name</td>
                        <td>@task.Name</td>
                        <td>StartTimerButton</td>
                        <td>
                        <select id="AddFixedTime-@(task.Id)">
                            @{
                                foreach(var duration in Model.Durations)
                                {
                                    <option value="@duration.Id">@duration.Text</option>
                                }
                            }
                        </select>
                            <button onclick="addEntry(@task.Id)" class="btn btn-primary">+</button>
                        </td>
                        <td>TotalTimeToday</td>
                    </tr>
            }
        }
    </tbody>
</table>

@section scripts {
    <script type="text/javascript">

        //************************************************
        //Show toastr after page reload fix
        window.onload = function () {
            var reloading = sessionStorage.getItem("reloading");
            if (reloading) {
                sessionStorage.removeItem("reloading");
                toastr["success"]("", "Entry Added");
            }
        }
        function reloadPage() {
            sessionStorage.setItem("reloading", "true");
            document.location.reload();
        }
        //***********************************************

       
        //Send Entry to controller
        function addEntry(taskId) {
            const fixedTimeDropDown = document.getElementById(`AddFixedTime-${taskId}`);
            const durationId = fixedTimeDropDown.value;
            $.ajax({
                url: "@Url.Action("AddEntry", "Task")",
                type: 'GET',
                data: {
                    taskId: taskId,
                    durationId: durationId
                },
                success: function (res) {
                    console.log(`Added fixedTime taskid:${taskId} durationid:${durationId}`);
                    //reloadPage();
                }
            });                       
        }

        //Toastr configuration
        toastr.options = {
            "closeButton": false,
            "debug": false,
            "newestOnTop": true,
            "progressBar": false,
            "positionClass": "toast-bottom-right",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        };

    </script>
}
