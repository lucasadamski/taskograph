@model GraphViewModel
@using Task = taskograph.Models.Tables.Task;
@using taskograph.Web.Models.DTOs


<h1>Show Graph</h1>

<p>
    Showing graph for number: @Model.HowManyCalendarUnits length: @Model.CalendarUnit
</p>


<form asp-controller="Graph" asp-action="ShowGraph" method="post">
    <div>
        <label asp-for="@Model.HowManyCalendarUnits">Number</label>
        <input asp-for="@Model.HowManyCalendarUnits" />
    </div>
    <div>
        <label asp-for="@Model.CalendarUnit">Length</label>
        <input asp-for="@Model.CalendarUnit" />
    </div>
    <input type="submit" class="btn btn-primary" value="Show Graph" />
</form>


@{
    foreach (var table in Model.Tables)
    {
        <h1>Table description</h1>
        <table>
            <tr>
                @for (int j = 0; j < table.Columns.Count(); j++)
                {
                    <td>@table.Columns.ElementAt(j).Title</td>
                }
            </tr>
            @for (int i = 0; i < table.Columns.ElementAt(0).Tasks.Count(); i++)
            {
                <tr>
                    @for (int j = 0; j < table.Columns.Count(); j++)
                    {
                        <td>@table.Columns.ElementAt(j).Tasks.ElementAt(i).Name : @table.Columns.ElementAt(j).Tasks.ElementAt(i).Duration :</td>
                    }
                </tr>
            }
            <tr>
                @for (int i = 0; i < table.Columns.Count(); i++)
                {
                    <td>Total Duration: @table.Columns.ElementAt(i).DurationSummary</td>
                }
            </tr>
        </table>
    }
}
